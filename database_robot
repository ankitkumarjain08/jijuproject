import pandas as pd
from concurrent.futures import ThreadPoolExecutor

def fetch_data_chunk(file_path, sheet_name, offset, limit):
    df = pd.read_excel(file_path, sheet_name=sheet_name, skiprows=offset, nrows=limit)
    return df.values.tolist()

def find_unmatched_values(chunk_1, chunk_2):
    unmatched_values = []
    for row in chunk_1:
        if row not in chunk_2:
            unmatched_values.append(row)
    return unmatched_values

def compare_data(file_path_1, file_path_2, sheet_name_1, sheet_name_2, chunk_size=500):
    total_rows_table_1 = len(pd.read_excel(file_path_1, sheet_name=sheet_name_1))
    total_rows_table_2 = len(pd.read_excel(file_path_2, sheet_name=sheet_name_2))

    unmatched_values = []
    with ThreadPoolExecutor(max_workers=10) as executor:
        futures = []
        for offset in range(0, max(total_rows_table_1, total_rows_table_2), chunk_size):
            future_1 = executor.submit(fetch_data_chunk, file_path_1, sheet_name_1, offset, chunk_size)
            future_2 = executor.submit(fetch_data_chunk, file_path_2, sheet_name_2, offset, chunk_size)
            chunk_1 = future_1.result()
            chunk_2 = future_2.result()
            futures.append((chunk_1, chunk_2))

        for chunk_1, chunk_2 in futures:
            unmatched_values.extend(find_unmatched_values(chunk_1, chunk_2))

    return unmatched_values

# Function to be called from Robot Framework
def compare_excel_files(file_path_1, file_path_2, sheet_name_1, sheet_name_2, chunk_size=500):
    unmatched_values = compare_data(file_path_1, file_path_2, sheet_name_1, sheet_name_2, chunk_size)
    return unmatched_values



*** Settings ***
Library           Process
Library           Collections

*** Variables ***
${FILE_PATH_1}    path/to/first/file.xlsx
${FILE_PATH_2}    path/to/second/file.xlsx
${SHEET_NAME_1}   Sheet1
${SHEET_NAME_2}   Sheet2
${CHUNK_SIZE}     500

*** Test Cases ***
Compare Excel Files
    ${unmatched_values}=    Compare Excel Files    ${FILE_PATH_1}    ${FILE_PATH_2}    ${SHEET_NAME_1}    ${SHEET_NAME_2}    ${CHUNK_SIZE}
    Should Be Empty    ${unmatched_values}
